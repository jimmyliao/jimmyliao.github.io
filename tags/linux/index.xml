<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on JimmyLiao Notes</title><link>https://jimmyliao.net/tags/linux/</link><description>Recent content in Linux on JimmyLiao Notes</description><generator>Hugo -- gohugo.io</generator><copyright>Copyright © 2008–2018, Steve Francia and the Hugo Authors; all rights reserved.</copyright><lastBuildDate>Fri, 12 Nov 2021 23:50:16 +0800</lastBuildDate><atom:link href="https://jimmyliao.net/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Using Crane to Build Custom Image with 1-Click PrimeHub</title><link>https://jimmyliao.net/post/2021-11-12-crane-oneclick/</link><pubDate>Fri, 12 Nov 2021 23:50:16 +0800</pubDate><guid>https://jimmyliao.net/post/2021-11-12-crane-oneclick/</guid><description>
&lt;p>&lt;strong>先快速來個中文版&lt;/strong>&lt;/p>
&lt;p>&lt;a href="https://medium.com/infuseai/crane-the-minimalist-container-image-builder-68253722be8c">Crane&lt;/a> 是 InfuseAI 剛推出的&lt;a href="https://github.com/InfuseAI/crane"> Open Source Project&lt;/a>，簡言之就是可以在已經&lt;a href="https://docs.docker.com/engine/install/">裝好 Docker&lt;/a> 的電腦上，免除撰寫 Dockerfile ，也免除透過 Command 方式編譯 Docker Image。另外也提供快速把自己在 Docker Hub 編譯好的 Image 加入 PrimeHub 環境裡，以下的範例，就以之前介紹的 &lt;a href="http://localhost:1313/post/2021-09-24-primehub-oneclick/">1-Click 環境&lt;/a>，&lt;a href="https://docs.primehub.io/docs/guide_manual/admin-image#build-custom-image">客製化 Docker Image&lt;/a>，裡面包含 PrimeHub 新推出的 &lt;a href="https://github.com/InfuseAI/primehub-python-sdk">SDK&lt;/a> 。來看看吧～&lt;/p>
&lt;p>&lt;a href="https://github.com/InfuseAI/crane/releases/tag/v1.0.0">下載 Crane&lt;/a> 安裝之後，有兩個資訊需要先準備：&lt;/p>
&lt;ul>
&lt;li>Docker Hub 的登入帳號/密碼&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://jimmyliao.net/images/2021-11-12-001.png" alt="">&lt;/p>
&lt;ul>
&lt;li>
&lt;p>PrimeHub 的 &lt;code>API TOKEN&lt;/code> (總之就是點下 &lt;code>Request API Token&lt;/code> 並且另外記錄下來，因為只會出現一次)
&lt;img src="https://jimmyliao.net/images/2021-11-12-002.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>打開裝好的 Crane，點選設定圖示，分別設定 Docker Hub 以及 1-Click PrimeHub 的資訊。如果還沒有用過 &lt;a href="https://one.primehub.io/">1-Click&lt;/a>，這邊也還有按鈕可以快速新增！
&lt;img src="https://jimmyliao.net/images/2021-11-12-003.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>點選新增，開始建立 Image，因為 Docker Hub 可以 push 的權限是以自己的 username，這邊記得填 &lt;code>&amp;lt;docker_username&amp;gt;/&amp;lt;image-name&amp;gt;&lt;/code>
&lt;img src="https://jimmyliao.net/images/2021-11-12-003-2.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>點 &lt;code>Build&lt;/code> 成功之後，會在 &lt;code>Images&lt;/code> &amp;gt; &lt;code>LOCAL&lt;/code> 底下看到
&lt;img src="https://jimmyliao.net/images/2021-11-12-004.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在 &lt;code>REMOTE REPOSITORIES&lt;/code>，記得點選左方的 &lt;code>+&lt;/code> 展開，點選 &lt;code>ADD&lt;/code>，就可以快速新增剛剛建好的 Image 到 PrimeHub 環境。
&lt;img src="https://jimmyliao.net/images/2021-11-12-005.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>設定在 PrimeHub 裡面會看到的 Image Description (群組/名稱/支援 CPU/GPU/Universal)
&lt;img src="https://jimmyliao.net/images/2021-11-12-006.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>點選 &lt;code>Create&lt;/code> 之後，如果成功會看到這個。
&lt;img src="https://jimmyliao.net/images/2021-11-12-007.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>接著切換到 PrimeHub 介面，確認已經透過 Crane 新增 Image 成功！
&lt;img src="https://jimmyliao.net/images/2021-11-12-008.png" alt="">&lt;/p>
&lt;/li>
&lt;li>
&lt;p>打開 Notebook 確認一下～
&lt;img src="https://jimmyliao.net/images/2021-11-12-009.png" alt="">&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Enjoy!&lt;/strong>&lt;/p></description></item><item><title>Tips and Tricks: The usage of xargs for kubectl</title><link>https://jimmyliao.net/post/2021-11-08-xargs/</link><pubDate>Mon, 08 Nov 2021 20:50:16 +0800</pubDate><guid>https://jimmyliao.net/post/2021-11-08-xargs/</guid><description>
&lt;p>When performing the operation on the cluster, you may need to check/edit the pod or resource back and forth. Here is one of the useful linux command &lt;code>xargs&lt;/code> to speed up your &lt;code>kubectl&lt;/code> operation.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>You have to check the pod status by checking log, but the pod NAME may not be identical.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>$ kubectl -n hub get pod
&lt;span class="ln">2&lt;/span>
&lt;span class="ln">3&lt;/span>NAME READY STATUS RESTARTS AGE
&lt;span class="ln">4&lt;/span>primehub-bootstrap-c9dng 1/1 Running 0 21h
&lt;span class="ln">5&lt;/span>
&lt;span class="ln">6&lt;/span>$ kubectl -n hub logs primehub-bootstrap-c9dng
&lt;span class="ln">7&lt;/span>...
&lt;/code>&lt;/pre>&lt;/div>&lt;p>so you can just use like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>$ kubectl -n hub get pod --no-headers | cut -d&amp;#39; &amp;#39; -f1 | xargs kubectl -n hub logs
&lt;span class="ln">2&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>kubectl&lt;/code> has &lt;code>--no-headers&lt;/code> option to output without header column&lt;/li>
&lt;li>&lt;code>cut -d' ' -f&lt;/code> to get the first column after trimming spaces&lt;/li>
&lt;li>the last pipeline pass &lt;code>xargs&lt;/code> strings &lt;code>X&lt;/code> to the &lt;code>kubectl -n hub logs X&lt;/code> last parameter&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>You may have several Custom Resources, would like to delete them all.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>$ kubectl get crd | grep primehub | cut -d&amp;#39; &amp;#39; -f1 | xargs kubectl delete crd
&lt;span class="ln">2&lt;/span>
&lt;span class="ln">3&lt;/span>customresourcedefinition.apiextensions.k8s.io &amp;#34;datasets.primehub.io&amp;#34; deleted
&lt;span class="ln">4&lt;/span>customresourcedefinition.apiextensions.k8s.io &amp;#34;images.primehub.io&amp;#34; deleted
&lt;span class="ln">5&lt;/span>customresourcedefinition.apiextensions.k8s.io &amp;#34;instancetypes.primehub.io&amp;#34; deleted
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>You want to dump the pod which is not Running/Completed.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="ln">1&lt;/span>$ kubectl -n kube-system get pod --no-headers | grep -v -e Running -e Completed | cut -d&amp;#39; &amp;#39; -f1 | xargs -I {} bash -c &amp;#39;kubectl -n kube-system get pod {} -o yaml &amp;gt; {}.yaml&amp;#39;
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>grep &lt;code>-v&lt;/code> for inverse-match, &lt;code>-e&lt;/code> for pattern&lt;/li>
&lt;li>&lt;code>bash -c&lt;/code> means the commands are read from &lt;code>string&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol></description></item></channel></rss>